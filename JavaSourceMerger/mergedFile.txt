package maliklund87.javasourcemerger;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.Scanner;

public class SourceMerger {
	private String originalPath;
	private FilenameFilter javaFilter;
	private File output;
	private FileWriter writer;
	
	public SourceMerger(String path) throws IOException{
		this.originalPath = path;
		File f = new File(this.originalPath);
		File output = new File("mergedFile.txt");
		writer = new FileWriter(output);
		javaFilter = new JavaFileFilter();
		handleDirectory(f);
		writer.close();
	}
	
	private void handleDirectory(File file){
		if (file.isDirectory()){
			File[] fileList = file.listFiles();
			for (File f: fileList){
				handleDirectory(f);
			}
		} else {
			if (file.getAbsolutePath().endsWith(".java")){
				handleFile(file);
			}
		}
	}
	
	private void handleFile(File file){
		try {
			Scanner scanner = new Scanner(file);
			while (scanner.hasNext()){
				writer.write(scanner.nextLine() + "\n");
			}
			scanner.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args){
		try {
			SourceMerger sm = new SourceMerger(".");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private class JavaFileFilter implements FilenameFilter{

		@Override
		public boolean accept(File dir, String name) {
			if (name.endsWith(".java")){
				return true;
			} else {
				return false;
			}
		}
	}
}
